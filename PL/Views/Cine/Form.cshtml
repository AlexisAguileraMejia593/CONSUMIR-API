@model ML.Cine
@{
    ViewData["Title"] = "Favorites";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #map {
        height: 300px;
    }
</style>
<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })({
        key: "AIzaSyCSKBDdPPlfca_zTwyxKiicRQn1qfgRjLw",
        // Add other bootstrap parameters as needed, using camel case.
        // Use the 'v' parameter to indicate the version to load (alpha, beta, weekly, etc.)
    });
</script>

<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>

<script src=" https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
<link rel="stylesheet" href=" https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="container">
    <h2 class="text-center">Formulario del CINE</h2>
    <h5>Ingrese la información del nuevo Cine</h5>
    <hr />

    @using (Html.BeginForm("Form", "Cine", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.HiddenFor(model => model.IdCine)

        @Html.HiddenFor(model => model.IdCine)
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Nombre)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1">
                        <i class="bi bi-clipboard2-pulse-fill"></i>

                    </span>
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Direccion)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-clipboard2-pulse-fill"></i></span>
                    @Html.TextBoxFor(model => model.Direccion, new { @class = "form-control" })
                </div>

            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Zona.IdZona)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-clipboard2-pulse-fill"></i></span>
                    @Html.TextBoxFor(model => model.Zona.IdZona, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Ventas)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-clipboard2-pulse-fill"></i></span>
                    @Html.TextBoxFor(model => model.Ventas, new { @class = "form-control" })
                </div>
            </div>
        </div>

        <h3>My Google Maps Demo</h3>
        <div id="map" class="border-top border-secondary" border-3></div>

        <div class="text-center">
            <button id="btnGuardar" class="btn btn-success" type="submit"><i class="fa-solid fa-floppy-disk"></i> Guardar</button>
            <a id="btnCancelar" onmouseover="CambiarColor()" class="btn btn-danger" href="@Url.Action("GetAll", "Cine")"><i class="fa-solid fa-right-from-bracket"></i> Volver</a>
        </div>

    }
</div>
@section Scripts{
<script type="text/javascript">

    let map;
    let marker;

    async function initMap() {
        const position = {
            lat: 19.43057908889617,
            lng: -99.16173851534197,
        };
        const { Map } = await google.maps.importLibrary("maps");

        map = new Map(document.getElementById("map"), {
            zoom: 4,
            center: position,
            mapId: "DEMO_MAP_ID",
        });

        let infoWindow = new google.maps.InfoWindow({
            content: "Presiona la locacion",
            position: position,
        });

        infoWindow.open(map);

        google.maps.event.addListener(map, "click", function (event) {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ latLng: event.latLng }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results[0]) {
                        $("#Direccion").val(results[0].formatted_address);
                        if (marker) {
                            marker.setPosition(event.latLng);
                        } else {
                            marker = new google.maps.Marker({
                                position: event.latLng,
                                map: map,
                            });
                        }
                        markers.push(marker);
                    }
                }
            });
        });
    } 

    initMap();

</script>
}